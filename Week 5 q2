#include <stdio.h>
#include <stdlib.h>

#define MAX 100

int graph[MAX][MAX];
int visited[MAX], recStack[MAX];
int vertices;

int isCyclicUtil(int v) {
    visited[v] = 1;
    recStack[v] = 1;

    for (int i = 0; i < vertices; i++) {
        if (graph[v][i]) {
            if (!visited[i] && isCyclicUtil(i))
                return 1;
            else if (recStack[i])
                return 1;
        }
    }

    recStack[v] = 0;
    return 0;
}

int isCyclic() {
    for (int i = 0; i < vertices; i++) {
        visited[i] = 0;
        recStack[i] = 0;
    }

    for (int i = 0; i < vertices; i++) {
        if (!visited[i]) {
            if (isCyclicUtil(i))
                return 1;
        }
    }
    return 0;
}

int main() {
    int edges, u, v;

    printf("Enter number of vertices: ");
    scanf("%d", &vertices);
    printf("Enter number of edges: ");
    scanf("%d", &edges);

    for (int i = 0; i < edges; i++) {
        printf("Enter edge %d (from to): ", i + 1);
        scanf("%d %d", &u, &v);
        graph[u][v] = 1;
    }

    if (isCyclic())
        printf("Cycle detected in the graph.\n");
    else
        printf("No cycle in the graph.\n");

    return 0;
}
