#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* prev;
    struct Node* next;
};

struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*) malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->prev = newNode->next = NULL;
    return newNode;
}

void insertEnd(struct Node** head, int data) {
    struct Node* newNode = createNode(data);
    if (*head == NULL) {
        *head = newNode;
        return;
    }
    struct Node* temp = *head;
    while (temp->next)
        temp = temp->next;
    temp->next = newNode;
    newNode->prev = temp;
}

int isPalindrome(struct Node* head) {
    if (head == NULL) return 1;
    struct Node* tail = head;
    while (tail->next)
        tail = tail->next;
    while (head != tail && head->prev != tail) {
        if (head->data != tail->data)
            return 0;
        head = head->next;
        tail = tail->prev;
    }
    return 1;
}

int main() {
    struct Node* head = NULL;
    int n, val;
    
    printf("Enter number of elements: ");
    scanf("%d", &n);
    
    printf("Enter %d values:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &val);
        insertEnd(&head, val);
    }

    if (isPalindrome(head))
        printf("Palindrome\n");
    else
        printf("Not Palindrome\n");

    return 0;
}
